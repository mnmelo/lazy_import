??/??/??      v0.2.3
 - Ensure that when a package of a lazy-loaded module is loaded, the
   lazy-loaded module remains an attribute of the newly loaded package.
 - Ensure that when two lazy-loaded modules exist in the same lazy package,
   the second (and all subsequent) lazy-modules are also added to the lazy
   packages list of lazy sub-modules.
 - More informative error when inadvertently trying to use a lazy callable a
   baseclass (Issue #2).
 - Extra level of debugging (trace debugging), toggled via lazy_import.logger.
22/01/2018    v0.2.2
 - fixed a serious bug when lazy-loading a submodule of a fully-loaded base.
17/01/2018    v0.2.1
 - annoying release to fix install notice on PyPi (because README.rst was
   incorrect).
17/01/2018    v0.2
 - stabilized a python 3 bug when importing modules using 'import modulename'
   syntax.
 - added a test shortcut.
 - published to PyPi (yay!)

25/08/2017    v0.1 
 - along with python 2.7, the code is now Python 3 compatible
   (at least versions 3.4 through 3.6).
 - a replacement of lazyModule (lazy_module, which defers most work to
   _lazy_module) was implemented that uses a modified LazyModule class;
 - a different LazyModule class is now created per instance, so that
   reverting the __getattribute__ behavior can be done safely;
 - a function to lazily import module callables was added;
 - customization is fully supported, either as passable custom error messages
   or as passable LazyModule subclass alternatives.
 - module reloading is now more stable, especially in the case of submodules.
 - added testing.

